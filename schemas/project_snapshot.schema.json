{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/schemas/project_snapshot.schema.json",
  "title": "Project Snapshot",
  "description": "Complete snapshot of project structure generated by project_map.py",
  "type": "object",
  "required": ["timestamp", "roots", "tree"],
  "additionalProperties": false,
  "properties": {
    "timestamp": {
      "type": "string",
      "pattern": "^[0-9]{8}_[0-9]{6}$",
      "description": "Timestamp in YYYYMMDD_HHMMSS format"
    },
    "roots": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Top-level directories that were scanned"
    },
    "tree": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["path"],
        "additionalProperties": false,
        "properties": {
          "path": {
            "type": "string",
            "description": "Relative path from project root"
          },
          "size": {
            "type": "integer",
            "minimum": 0,
            "description": "File size in bytes (only for files)"
          },
          "dir": {
            "type": "boolean",
            "const": true,
            "description": "Indicates this is a directory"
          }
        }
      },
      "description": "Complete file and directory listing"
    },
    "labels_summary": {
      "type": "object",
      "required": ["files", "records"],
      "additionalProperties": false,
      "properties": {
        "files": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of label files found"
        },
        "records": {
          "type": "integer",
          "minimum": 0,
          "description": "Total number of label records"
        }
      }
    },
    "chunks_summary": {
      "type": "object",
      "required": ["manifest_present", "listed", "ndjson_files"],
      "additionalProperties": false,
      "properties": {
        "manifest_present": {
          "type": "boolean",
          "description": "Whether a chunks manifest was found"
        },
        "listed": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of chunks listed in manifest"
        },
        "ndjson_files": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of NDJSON chunk files found"
        }
      }
    },
    "api": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "required": ["functions", "classes"],
        "properties": {
          "functions": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "params"],
              "properties": {
                "name": {"type": "string"},
                "async": {"type": "boolean"},
                "params": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["name", "kind"],
                    "properties": {
                      "name": {"type": "string"},
                      "annotation": {"type": "string"},
                      "kind": {
                        "type": "string",
                        "enum": ["posonly", "pos", "vararg", "kwonly", "varkw"]
                      }
                    }
                  }
                },
                "returns": {"type": "string"}
              }
            }
          },
          "classes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "methods"],
              "properties": {
                "name": {"type": "string"},
                "methods": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["name", "params"],
                    "properties": {
                      "name": {"type": "string"},
                      "async": {"type": "boolean"},
                      "params": {"type": "array"},
                      "returns": {"type": "string"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "description": "Extracted Python API surface when --extract-api is used"
    }
  }
}